#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&caps_word { continue-list = <MINUS UNDERSCORE BSPC DEL LEFT RIGHT DOT COMMA SEMI SLASH>; };
&sk { release-after-ms = <3000>; quick-release; ignore-modifiers; };
&sl { release-after-ms = <3000>; };

#define xxxx &none
#define ____ &trans
#define LEADR &sk LG(LS(LA(LCTRL)))
#define LCT &sk LCTRL
#define LGU &sk LGUI
#define LAL &sk LALT
#define LSH &sk LSHFT
#define RCT &sk RCTRL
#define RGU &sk RGUI
#define RAL &sk RALT
#define RSH &sk RSHFT

#define ks(l) &ksk l l 

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 2000  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 50    // 10
#include <dt-bindings/zmk/pointing.h>
&mmv {
  acceleration-exponent = <1>;      // 1
  time-to-max-speed-ms = <800>;    // 40
};
&msc {
  acceleration-exponent = <1>;      // 0
  time-to-max-speed-ms = <40>;    // 500
};

/ { 
    macros {
        rst_all:  rst_all  { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_release &kp LSHFT &kp LCTRL &kp LALT &kp LGUI &kp RSHFT &kp RCTRL &kp RALT &kp RGUI>, <&macro_tap &to 0>; };
        dot_spc:  dot_spc  { compatible = "zmk,behavior-macro"; #binding-cells = <0>; wait-ms = <5>; tap-ms = <15>;
            bindings = <&macro_tap &kp DOT &kp SPACE &sk LSHFT>; };
        tog_lay:  tog_lay  { compatible = "zmk,behavior-macro-one-param"; #binding-cells = <1>; 
            bindings = <&macro_pause_for_release>, <&macro_param_1to1>, <&macro_tap &tog MACRO_PLACEHOLDER>; };
    };

    behaviors {
        mk:  moml_kp      { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&kp>; }; 
        ksk: kp_sk        { compatible = "zmk,behavior-hold-tap";  #binding-cells = <2>; flavor = "tap-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&sk>; }; 
        blt: bluetoot     { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&bt BT_NXT>, <&bt BT_CLR>; mods = <(MOD_RALT)>; };
        cps: caps_wrd     { compatible = "zmk,behavior-mod-morph"; #binding-cells = <0>; bindings = <&caps_word>, <&kp CAPS>; mods = <(MOD_LALT|MOD_RALT)>; };
    };
  
    keymap {
        compatible = "zmk,keymap";
        abc {
            label = "abc";
            bindings = <
            //  1             2         3       4       5       6       7           8       9           10          11          12          13          14          15          16
                &kp C_VOL_UP  &kp GRAVE &kp N1  &kp N2  &kp N3  &kp N4  &kp N5      &kp N6  &kp N7      &kp N8      &kp N9      &kp N0      &kp PG_UP   &kp PG_DN   
                &kp C_VOL_DN  &kp ESC   &kp Q   &kp W   &kp D   &kp F   &kp L       &kp U   &kp O       &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT    &kp UP      &kp HOME    &kp END 
                &key_repeat &cps        &kp A   &kp S   &kp R   &kp T   &kp G       &kp H   &kp E       &kp I       &kp P       &kp SQT     &kp SLASH   &kp LEFT    &kp DOWN    &kp RIGHT 
                &tog 1      &dot_spc    &kp Y   &kp X   &kp C   &kp V   &kp Z       &kp B   &kp N       &kp M       &kp K       &kp J       &kp DOT     &kp COMMA   &kp SEMI    &kp BSLH 
                            LEADR       LCT     LGU     LAL     &kp TAB &kp BSPC    LSH     &kp SPACE   &kp ENTER   RAL         RGU         RCT         &kp DEL     &kp INS     &kp C_PP 
            >; 
        };

        fun {
            label = "fu#";
            bindings = <
            //  1       2       3        4           5           6           7       8               9               10              11              12      13      14      15      16
                ____    ____    &kp F1   &kp F2      &kp F3      &kp F4      &kp F5  &kp F6          &kp F7          &kp F8          &kp F9          &kp F10 ____    
                ____    ____    &kp F11  &kp F12     &kp F13     &kp F14     &kp F15 &msc SCRL_UP    &msc SCRL_DOWN  ____            ____            ____    ____    ____    ____    ____
                ____ &studio_unlock ____ &mkp RCLK   &mkp MCLK   &mkp LCLK   ____    &mmv MOVE_LEFT  &mmv MOVE_UP    &mmv MOVE_RIGHT &mmv MOVE_DOWN  ____    ____    ____    ____    ____
                ____    ____    ____     &kp K_APP   ____        ____        ____    ____            ____            ____            ____            ____    ____    ____    ____    ____
                        ____    ____     ____        ____        ____        ____    ____            ____            ____            ____            ____    ____    ____    ____    &blt 
            >;
        };

    };
};
